#!/usr/bin/env swift-osx

import Foundation
import WL

// Idea behind this script:
// [ Git Fake Submodules Â» Debuggable - Node.js Consulting ]( http://debuggable.com/posts/git-fake-submodules:4b563ee4-f3cc-4061-967e-0e48cbdd56cb )

private func getFilesFromGroup(group: PBXGroup) -> [String] {
	var groupFiles = [String]()
	for file in group.files {
		if file.fullPath.hasSuffix(".xcodeproj") {
			continue
		}
		if !file.fullPath.hasPrefix("Vendor/") {
			groupFiles.append("Vendor/" + file.fullPath)
		} else {
			groupFiles.append(file.fullPath)
		}
	}
	for g in group.groups {
		groupFiles += getFilesFromGroup(g)
	}
	return groupFiles
}

let projectRootDirectoryPath = Process.executableDirectoryPath.stringByDeletingLastPathComponent

private func removeFilesFromParentGitRepository() {
	let task = NSTask()
	task.launchPath = "/usr/bin/git"
	task.currentDirectoryPath = projectRootDirectoryPath
	task.arguments = ["rm", "--cached", "-r", "Vendor/WL/"]
	task.launch()
	task.waitUntilExit()
}
	
private func addFilesToParentGitRepository(files: [String]) {
	guard files.count > 0 else {
		return
	}
	let task = NSTask()
	task.launchPath = "/usr/bin/git"
	task.currentDirectoryPath = projectRootDirectoryPath
	task.arguments = ["add", "-v", "-f"] + files
	task.launch()
	task.waitUntilExit()
}

private func getFilesFromProjectAtURL(projectURL: NSURL) {
	let xp = XCProject(projectURL: projectURL)
	let vendorGroup = (xp.rootObject.mainGroup["Vendor"]?["WL"])!
	let groupFiles = getFilesFromGroup(vendorGroup)
	addFilesToParentGitRepository(groupFiles)
}

removeFilesFromParentGitRepository()
getFilesFromProjectAtURL(NSURL(fileURLWithPath: projectRootDirectoryPath + "/Vendor/WLShared.xcodeproj/project.pbxproj"))
getFilesFromProjectAtURL(NSURL(fileURLWithPath: projectRootDirectoryPath + "/Vendor/WLExtShared.xcodeproj/project.pbxproj"))
